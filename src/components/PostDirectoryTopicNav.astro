---
import { calculateReadingTime } from '@scripts/utils/readingTime';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog');

const sortedPosts = allPosts
  .sort(
    (a, b) => b.data.date_published.valueOf() - a.data.date_published.valueOf()
  )
  .map((post) => ({
    ...post,
    readingTime: calculateReadingTime(post.body),
  }));

const topics = [
  ...new Set(sortedPosts.map((post: any) => post.data.topic).flat()),
];
---

<style>
  /* *** General *** */
  a {
    text-decoration: none;
  }

  ul {
    display: flex;
    flex-direction: column;

    padding: 0;

    list-style: none;
  }

  li {
    display: flex;

    padding: 0;
  }

  /* *** Blog Topics Navigation *** */

  .blog-topics-nav {
    /* position: sticky;
  top: 3.5rem; */

    grid-column: span 2;
    /* margin-bottom: 4rem; */

    /* z-index: 10; */
  }

  .blog-topics-list {
    display: flex;
    flex-direction: row;
    gap: 2rem;

    background-color: var(--clr-base);

    padding: 1rem;

    /* border: 1px solid var(--clr-surface-0); */
    border-radius: var(--radius-base);
  }
</style>

<nav class='blog-topics-nav'>
  <ul
    class='blog-topics-list'
    transition:name='post-directory-topics'>
    {
      topics.map((topic) => (
        <li class='blog-topics-list-item'>
          <a href={`/blog/topics/${topic}`}>{topic}</a>
        </li>
      ))
    }
  </ul>
</nav>
