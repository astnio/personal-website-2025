---
import { Picture } from 'astro:assets';

const {
  url,
  image,
  title,
  description,
  tags,
  githubUrl,
  demoUrl,
  projectPageUrl,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/content/projects/**/*.{png,jpg,jpeg,gif,webp}'
);

let imageSource: ImageMetadata | null = null;

if (image) {
  const projectSlug = url.split('/').pop();
  const fullPath = `/src/content/projects/${projectSlug}/${image.replace('./', '')}`;
  const imageModule = await images[fullPath]();
  imageSource = imageModule.default;
} else {
  imageSource = null;
}
---

<style>
  .project-card {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: space-between;
    gap: 1rem;

    min-height: 40rem;

    background-color: var(--clr-base);

    border-radius: var(--radius-surface);

    outline: 1px solid var(--clr-surface-0);

    padding: 2rem;
  }

  .project-image {
    width: 100%;
    height: auto;
    border-radius: var(--radius-base);
  }

  ul.tags-list {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    list-style: none;
    padding: 0;
  }

  li.tag {
    display: flex;
    align-items: center;
    justify-content: center;

    padding-block: 0.4rem;
    padding-inline: 1.2rem;

    font-size: 0.8rem;

    border-radius: 999px;

    background-color: var(--clr-surface-0);
  }

  ul.links-list {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    list-style: none;

    padding: 0;
    margin: 0;
  }

  a.link {
    display: flex;
    align-items: center;
    justify-content: center;

    text-decoration: none;

    padding-block: 0.8rem;
    padding-inline: 1.4rem;

    background-color: var(--clr-surface-0);
    outline: 1px solid var(--clr-surface-1);

    border-radius: var(--radius-input);

    cursor: pointer;
  }
</style>

<div class='project-card'>
  {
    imageSource && (
      <Picture
        src={imageSource}
        widths={[400, 800]}
        sizes='(max-width: 800px) 100vw, 800px'
        alt={title}
        class='project-image'
      />
    )
  }
  <a href={url}>{title}</a>
  <p>{description}</p>
  <ul class='links-list'>
    {
      githubUrl && (
        <li>
          <a
            class='link'
            href={githubUrl}
            target='_blank'>
            Github
          </a>
        </li>
      )
    }
    {
      demoUrl && (
        <li>
          <a
            class='link'
            href={demoUrl}
            target='_blank'>
            Demo
          </a>
        </li>
      )
    }
    {
      projectPageUrl && (
        <li>
          <a
            class='link'
            href={projectPageUrl}>
            Project
          </a>
        </li>
      )
    }
  </ul>
  <ul class='tags-list'>
    {
      tags.map((tag: string) => (
        <li class='tag'>
          <a href={`/projects/tags/${tag}`}>{tag}</a>
        </li>
      ))
    }
  </ul>
</div>
