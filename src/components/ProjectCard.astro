---
import { Picture } from 'astro:assets';

const {
  url,
  image,
  title,
  date,
  description,
  tags,
  githubUrl,
  demoUrl,
  projectPageUrl,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/content/projects/**/*.{png,jpg,jpeg,gif,webp}'
);

let imageSource: ImageMetadata | null = null;

if (image) {
  const projectSlug = url.split('/').pop();
  const fullPath = `/src/content/projects/${projectSlug}/${image.replace('./', '')}`;
  const imageModule = await images[fullPath]();
  imageSource = imageModule.default;
} else {
  imageSource = null;
}

const formattedDate = new Date(date).toLocaleDateString('en-US', {
  month: 'long',
  year: 'numeric',
});
---

<style>
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin: 0;
  }

  .project-card {
    display: flex;
    flex-direction: column;

    height: 100%;
    max-height: 38rem;

    background-color: var(--clr-base);

    border-radius: var(--radius-surface);

    outline: 1px solid var(--clr-surface-0);

    overflow: hidden;
  }

  .project-info-wrapper {
    display: flex;
    flex-direction: column;
    align-items: start;

    gap: 1rem;

    padding: 1rem;

    height: 100%;
  }

  .picture-wrapper {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;

    aspect-ratio: 10/9;

    overflow: hidden;

    border-bottom: 1px solid var(--clr-surface-0);
  }

  .project-image {
    position: absolute;
    left: 0;
    top: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    object-fit: cover;

    width: 100%;
    height: 100%;

    cursor: pointer;

    scale: 1;

    transition-property: scale;
    transition-duration: 0.35s;
    transition-timing-function: ease-in-out;
  }

  .project-image:hover {
    scale: 1.075;
  }

  .card-title > a {
    text-decoration: none;
  }

  .card-title {
    font-weight: 600;
    font-size: 1.4rem;

    margin-top: 1rem;
  }

  .card-date {
    color: var(--clr-subtext-1);
    background-color: var(--clr-mantle);

    padding-inline: 0.8rem;
    padding-block: 0.4rem;

    border-radius: var(--radius-input);

    margin-bottom: 1rem;
  }

  .card-description {
    line-height: 150%;

    margin-top: auto;
    margin-bottom: 1rem;
  }

  ul.tags-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;

    list-style: none;
    padding: 0;
    margin: auto 0 0 0;
  }

  a.tag-link {
    display: flex;
    align-items: center;
    justify-content: center;

    padding-block: 0.4rem;
    padding-inline: 1.2rem;

    font-size: 0.8rem;

    border-radius: 999px;

    background-color: var(--clr-surface-0);

    outline: 1px solid var(--clr-surface-1);

    text-decoration: none;

    transition-property: background-color, color, outline;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a.tag-link:hover {
    color: var(--clr-primary);
    background-color: var(--clr-surface-1);
    outline: 1px solid var(--clr-surface-2);
  }

  ul.links-list {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    list-style: none;

    padding: 0;
    margin: 0;
    margin-bottom: auto;
  }

  a.link {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.6rem;

    color: var(--clr-text);
    text-decoration: none;

    border-radius: var(--radius-input);
    outline: 1px solid var(--clr-surface-0);

    height: 2.4rem;

    transition-property: color, background-color, outline;
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
  }

  a.link:hover {
    outline: 1px solid var(--clr-surface-1);
    color: var(--clr-primary);
    background-color: var(--clr-mantle);
  }

  .link-label {
    margin-right: auto;
    padding-right: 2rem;
    padding-left: 1rem;
  }

  .link-icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;

    margin-right: auto;

    aspect-ratio: 1;

    background-color: var(--clr-mantle);

    height: 100%;

    transition-property: background-color, color;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a:hover > .link-icon-wrapper {
    background-color: var(--clr-base);
    color: var(--clr-primary);
  }

  .link-icon {
    font-size: 1.4rem;
  }
</style>

<div class='project-card'>
  {
    imageSource && (
      <div class='picture-wrapper'>
        <Picture
          src={imageSource}
          widths={[400, 800]}
          sizes='(max-width: 800px) 100vw, 800px'
          alt={title}
          class='project-image'
        />
      </div>
    )
  }
  <div class='project-info-wrapper'>
    <h4 class='card-title'><a href={url}>{title}</a></h4>
    <p class='card-date'>{formattedDate}</p>
    <p class='card-description'>{description}</p>
    <ul class='links-list'>
      {
        githubUrl && (
          <li>
            <a
              class='link'
              href={githubUrl}
              target='_blank'>
              <div class='link-icon-wrapper'>
                <span class='link-icon bx bxl-github' />
              </div>
              <span class='link-label'>Github</span>
            </a>
          </li>
        )
      }
      {
        demoUrl && (
          <li>
            <a
              class='link'
              href={demoUrl}
              target='_blank'>
              <div class='link-icon-wrapper'>
                <span class='link-icon bx bxs-show' />
              </div>
              <span class='link-label'>Demo</span>
            </a>
          </li>
        )
      }
      {
        projectPageUrl && (
          <li>
            <a
              class='link'
              href={projectPageUrl}>
              Project
            </a>
          </li>
        )
      }
    </ul>
    <ul class='tags-list'>
      {
        tags.map((tag: string) => (
          <li>
            <a
              class='tag-link'
              href={`/projects/tags/${tag}`}>
              {tag}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</div>
