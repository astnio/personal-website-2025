---
import { Picture } from 'astro:assets';

const {
  url,
  image,
  title,
  date,
  description,
  tags,
  githubUrl,
  demoUrl,
  projectPageUrl,
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/content/projects/**/*.{png,jpg,jpeg,gif,webp}'
);

let imageSource: ImageMetadata | null = null;

if (image) {
  const projectSlug = url.split('/').pop();
  const fullPath = `/src/content/projects/${projectSlug}/${image.replace('./', '')}`;
  const imageModule = await images[fullPath]();
  imageSource = imageModule.default;
} else {
  imageSource = null;
}

const formattedDate = new Date(date).toLocaleDateString('en-US', {
  month: 'long',
  year: 'numeric',
});
---

<style>
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin: 0;
  }

  .project-card {
    display: flex;
    flex-direction: column;

    height: 100%;

    background-color: var(--clr-base);

    border-radius: var(--radius-surface);

    outline: 1px solid var(--clr-surface-0);
  }

  .project-info-wrapper {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;
    gap: 1rem;

    padding: 1rem;

    height: 100%;
  }

  .project-image {
    display: flex;
    align-items: center;
    justify-content: center;

    aspect-ratio: 16/9;

    object-fit: cover;

    max-width: 100%;
    height: 100%;
  }

  .card-title > a {
    text-decoration: none;
  }

  .card-title {
    font-weight: 600;
    font-size: 1.4rem;

    margin-top: 1rem;
  }

  .card-date {
    color: var(--clr-subtext-1);
    background-color: var(--clr-mantle);

    padding-inline: 0.8rem;
    padding-block: 0.4rem;

    border-radius: var(--radius-input);

    margin-bottom: 1rem;
  }

  .card-description {
    line-height: 150%;
    margin-bottom: 1rem;
  }

  ul.tags-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;

    list-style: none;
    padding: 0;
    margin-top: 2rem;
  }

  li.tag {
    display: flex;
    align-items: center;
    justify-content: center;

    padding-block: 0.4rem;
    padding-inline: 1.2rem;

    font-size: 0.8rem;

    border-radius: 999px;

    background-color: var(--clr-surface-0);
  }

  ul.links-list {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    list-style: none;

    padding: 0;
    margin: 0;
    margin-block: auto;
  }

  a.link {
    display: flex;
    align-items: center;
    justify-content: center;

    text-decoration: none;

    padding-block: 0.8rem;
    padding-inline: 1.4rem;

    background-color: var(--clr-surface-0);
    outline: 1px solid var(--clr-surface-1);

    border-radius: var(--radius-input);

    cursor: pointer;
  }
</style>

<div class='project-card'>
  {
    imageSource && (
      <Picture
        src={imageSource}
        widths={[400, 800]}
        sizes='(max-width: 800px) 100vw, 800px'
        alt={title}
        class='project-image'
      />
    )
  }
  <div class='project-info-wrapper'>
    <h4 class='card-title'><a href={url}>{title}</a></h4>
    <p class='card-date'>{formattedDate}</p>
    <p class='card-description'>{description}</p>
    <ul class='links-list'>
      {
        githubUrl && (
          <li>
            <a
              class='link'
              href={githubUrl}
              target='_blank'>
              Github
            </a>
          </li>
        )
      }
      {
        demoUrl && (
          <li>
            <a
              class='link'
              href={demoUrl}
              target='_blank'>
              Demo
            </a>
          </li>
        )
      }
      {
        projectPageUrl && (
          <li>
            <a
              class='link'
              href={projectPageUrl}>
              Project
            </a>
          </li>
        )
      }
    </ul>
    <ul class='tags-list'>
      {
        tags.map((tag: string) => (
          <li class='tag'>
            <a href={`/projects/tags/${tag}`}>{tag}</a>
          </li>
        ))
      }
    </ul>
  </div>
</div>
