---
import links from '../scripts/data.json';
const navLinks = links.internalLinks;
---

<style>
  a {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.2rem;

    text-decoration: none;
    text-transform: capitalize;

    padding-block: 0.4rem;

    transition-property: color, opacity;
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
  }

  a:hover {
    color: var(--clr-primary);
  }

  a::after {
    content: '';

    position: absolute;
    bottom: 0.1rem;
    left: 0;

    width: 0;
    height: 1px;

    background-color: var(--clr-primary);

    transition-property: width;
    transition-duration: 0.2s;
    transition-timing-function: ease-in-out;
  }

  a:hover::after {
    width: 100%;
  }

  a[data-is-current-page='true'] {
    color: var(--clr-secondary);

    opacity: 0.8;
  }

  a[data-is-current-page='true']:hover {
    color: var(--clr-secondary);
    opacity: 1;
  }

  a[data-is-current-page='true']:hover::after {
    background-color: var(--clr-secondary);
    width: 100%;
  }

  a::before {
    content: '\203A';

    position: absolute;
    left: 0;
    top: -0.1rem;

    transform: translateX(0);
    opacity: 0;

    font-size: 1.6rem;

    transition-property: transform, opacity;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a[data-is-current-page='true']::before {
    transform: translateX(-0.75rem);
    opacity: 1;
  }

  ul.nav-links {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 2rem;

    width: 100%;

    margin: 0;
    padding: 0;

    list-style: none;
  }

  @media screen and (max-width: 768px) {
    ul.nav-links {
      flex-direction: column;
      align-items: start;

      height: 100%;

      font-size: 1.4rem;
    }

    a::before {
      font-size: 2rem;
    }

    a[data-is-current-page='true']::before {
      transform: translateX(-1rem);
    }
  }
</style>

<ul class='nav-links'>
  {
    navLinks.map((navLink) => {
      const isActive =
        Astro.url.pathname === navLink.url ||
        (navLink.url !== '/' && Astro.url.pathname.startsWith(navLink.url));

      return (
        <li>
          <a
            class='nav-link'
            href={navLink.url}
            data-is-current-page={isActive.toString()}>
            {navLink.label}
          </a>
        </li>
      );
    })
  }
</ul>
