---
const { url, label, iconClass, newTab = 'true' } = Astro.props;
---

<style>
  :root {
    --spacing: 1.8rem;
  }

  a {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.6rem;

    color: var(--clr-text);
    text-decoration: none;

    border-radius: 1pt;
    outline: 1px solid var(--clr-surface-1);

    height: 2.4rem;
    min-width: 16rem;


    transition-property: color, background-color, outline;
    transition-duration: 0.1s;
    transition-timing-function: ease-out;
  }

  a:hover {
    outline: 1px solid var(--clr-surface-2);
  }

  a::before {
    content: '';

    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    background-color: var(--clr-surface-0);

    opacity: 0.4;

    z-index: -1;
  }

  a:hover::before {
    background-color: var(--clr-surface-1);
  }

  .link-label {
    position: relative;
    top: 0.05rem;

    display: flex;
    align-items: center;
    justify-content: center;

    padding: 0;

    margin: auto;
    margin-left: 1rem;
    padding-right: var(--spacing);


    font-size: 1rem;
    font-weight: 100;
  }

  .link-icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;

    margin-right: auto;

    aspect-ratio: 1;

    background-color: var(--clr-base);

    height: 100%;

    transition-property: background-color;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a:hover > .link-icon-wrapper {
    background-color: var(--clr-surface-0);
  }

  .link-icon {
    display: flex;
    align-items: center;
    justify-content: center;

    font-size: 1.4rem;


    height: 100%;
  }
</style>

<a href={url} target={newTab ? `_blank` : ''}>
  {iconClass && <div class="link-icon-wrapper"><span class=`link-icon ${iconClass}`></span></div> }
  <span class="link-label">{label}</span>  
</a>
