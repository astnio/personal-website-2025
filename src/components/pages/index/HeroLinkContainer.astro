---
import Heading from '@/components/typgraphy/Heading.astro';
import HeroLink from './HeroLink.astro';
import type { Link } from '@/types';

interface Props {
  links: Link[];
  title: string;
  internalLink: boolean;
}

const { links, title, internalLink } = Astro.props;
const containerHeadingId = `hero-link-container-heading-${title.toLowerCase()}`;
const linkListWrapperId = `hero-link-wrapper-${title.toLowerCase()}`;
---

<style>
  nav.link-list-wrapper {
    display: grid;

    transition-property: grid-template-rows;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  nav.link-list-wrapper[data-open='false'] {
    grid-template-rows: 0fr;
  }

  nav.link-list-wrapper[data-open='true'] {
    grid-template-rows: 1fr;
  }

  nav.link-list-wrapper > div {
    overflow: hidden;
  }
</style>

<article>
  <button id={containerHeadingId}>
    <Heading>{title}</Heading>
  </button>
  <nav
    class='link-list-wrapper'
    id={linkListWrapperId}
    data-open='false'>
    <div>
      <ul class='link-list'>
        {
          links.map((link) => (
            <li>
              <HeroLink
                url={link.url}
                label={link.label}
                iconClass={link.iconClass}
                newTab={internalLink ? false : true}
              />
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</article>

<script define:vars={{ containerHeadingId, linkListWrapperId }}>
  document.addEventListener('astro:page-load', () => {
    const btnHeading = document.getElementById(containerHeadingId);
    const linkList = document.getElementById(linkListWrapperId);

    btnHeading.addEventListener('click', () => {
      const listActive = linkList.getAttribute('data-open');

      if (listActive === 'true') {
        linkList.setAttribute('data-open', 'false');
      } else if (listActive === 'false') {
        linkList.setAttribute('data-open', 'true');
      }
    });
  });
</script>
