---
interface Props {
  type: 'in-progress' | 'complete' | 'incomplete';
}

const { type } = Astro.props;
---

<style>
  .project-status {
    position: relative;
    left: 0.25rem;

    justify-self: end;

    display: flex;
    align-items: center;
    justify-content: center;

    padding: 0.3rem;

    height: fit-content;
    width: fit-content;

    border-radius: var(--radius-circle);
    outline: 1px solid var(--clr-surface-1);

    aspect-ratio: 1;

    font-size: 0.85rem;
    font-weight: 600;

    overflow: hidden;
  }

  .project-status::before {
    content: '';
    position: absolute;

    width: 100%;
    height: 100%;

    z-index: -1;
  }

  :root[data-color-scheme='dark'] .project-status::before {
    filter: brightness(70%) saturate(90%);
  }

  :root[data-color-scheme='light'] .project-status::before {
    filter: brightness(115%) saturate(80%);
  }

  .project-status.status-complete {
    color: var(--clr-success);
    outline: 1px solid var(--clr-success);
    box-shadow: 0 0 1px 1px var(--clr-success);
  }

  .project-status.status-complete::before {
    background-color: var(--clr-success);
  }

  .project-status.status-incomplete {
    color: var(--clr-error);
    outline: 1px solid var(--clr-error);
    box-shadow: 0 0 1px 1px var(--clr-error);
  }

  .project-status.status-incomplete::before {
    background-color: var(--clr-error);
  }

  .project-status.status-in-progress {
    color: var(--clr-warning);
    outline: 1px solid var(--clr-warning);
    box-shadow: 0 0 1px 1px var(--clr-warning);
  }

  .project-status.status-in-progress::before {
    background-color: var(--clr-warning);
  }
</style>

<p
  class=`project-status status-${type}`
  title=`Status: ${type}`>
  <span class='visually-hidden'>{type}</span>
</p>
