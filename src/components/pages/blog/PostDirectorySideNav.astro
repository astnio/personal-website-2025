---
import { calculateReadingTime } from '@scripts/utils/readingTime';
import { getCollection } from 'astro:content';
import DirectorySideNavList from './DirectorySideNavList.astro';

const allPosts = await getCollection('blog');

const sortedPosts = allPosts
  .sort(
    (a, b) => b.data.date_published.valueOf() - a.data.date_published.valueOf()
  )
  .map((post: any) => ({
    ...post,
    readingTime: calculateReadingTime(post.body),
  }));

const topics = [
  ...new Set(sortedPosts.map((post: any) => post.data.topic).flat()),
];

const categories = [
  ...new Set(sortedPosts.map((post: any) => post.data.category).flat()),
];

const tags = [
  ...new Set(sortedPosts.map((post: any) => post.data.tags).flat()),
];

const topicCounts = sortedPosts.reduce(
  (acc, post) => {
    const topic = post.data.topic;
    acc[topic] = (acc[topic] || 0) + 1;
    return acc;
  },
  {} as Record<string, number>
);

const categoryCounts = sortedPosts.reduce(
  (acc, post) => {
    const category = post.data.category;
    acc[category] = (acc[category] || 0) + 1;
    return acc;
  },
  {} as Record<string, number>
);

const tagCounts = sortedPosts.reduce(
  (acc, post) => {
    const tags = post.data.tags;
    tags.forEach((tag: string) => {
      acc[tag] = (acc[tag] || 0) + 1;
    });
    return acc;
  },
  {} as Record<string, number>
);
---

<style>
  a {
    text-decoration: none;
  }

  ul {
    display: flex;
    flex-direction: column;

    padding: 0;

    list-style: none;
  }

  li {
    display: flex;

    padding: 0;
  }

  .blog-nav-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: start;

    position: relative;

    padding-bottom: 2rem;
  }

  .blog-nav-wrapper[data-appbar-revealed='false'],
  .blog-nav-wrapper[data-appbar-revealed='true'] {
    top: 0;
  }

  .blog-nav {
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--clr-surface-0) var(--clr-base);

    padding-right: 0.5rem;
  }

  .blog-nav-list > li {
    width: 100%;
  }

  ul.blog-nav-list {
    display: flex;
    gap: 1.4rem;
    margin: 0;
  }

  @media screen and (min-width: 768px) {
    .blog-nav-wrapper {
      position: sticky;

      height: 100dvh;

      transition: top 0.4s ease-in-out;
    }

    .blog-nav-wrapper[data-appbar-revealed='true'] {
      top: 5rem;
    }

    .blog-nav-wrapper[data-appbar-revealed='false'] {
      top: 1rem;
    }

    .blog-nav-list {
      flex-direction: column;
      align-items: start;

      font-size: 1.2rem;

      margin-left: auto;

      max-width: 18rem;
      width: 100%;
    }
  }
</style>

<aside
  class='blog-nav-wrapper'
  data-appbar-revealed='true'
  transition:name='post-direcotry-nav'>
  <nav class='blog-nav'>
    <ul class='blog-nav-list'>
      <li>
        <DirectorySideNavList
          title='Topics'
          url='/blog/topics'
          iconClass='bx bxs-bulb'
          list={topics}
          listType='topics'
          counts={topicCounts}
        />
      </li>

      <li>
        <DirectorySideNavList
          title='Categories'
          url='/blog/categories'
          iconClass='bx bxs-category'
          list={categories}
          listType='categories'
        />
      </li>

      <li>
        <DirectorySideNavList
          title='Tags'
          url='/blog/tags'
          iconClass='bx bxs-tag-alt'
          list={tags}
          listType='tags'
        />
      </li>
      <li>
        <a href='/blog/archive'>
          <span>
            <i class='bx bxs-archive'></i>
          </span>
          <span>Archive</span>
        </a>
      </li>
    </ul>
  </nav>
</aside>
