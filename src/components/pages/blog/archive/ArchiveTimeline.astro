---
import { getCollection } from 'astro:content';
import ArchivePostCard from './ArchivePostCard.astro';

const allPosts = await getCollection('blog');

const sortedPosts = allPosts.sort(
  (a, b) => b.data.date_published.getTime() - a.data.date_published.getTime()
);

const postsByYearAndMonth = sortedPosts.reduce(
  (acc, post) => {
    const date = post.data.date_published;
    const year = date.getFullYear();
    const month = date.toLocaleString('default', { month: 'long' });

    if (!acc[year]) {
      acc[year] = {};
    }

    if (!acc[year][month]) {
      acc[year][month] = [];
    }

    acc[year][month].push(post);

    return acc;
  },
  {} as Record<number, Record<string, typeof sortedPosts>>
);

const sortedYears = Object.keys(postsByYearAndMonth)
  .map(Number)
  .sort((a, b) => b - a);

const monthOrder = [
  'January',
  'February',
  'March',
  'April',
  'May',
  'June',
  'July',
  'August',
  'September',
  'October',
  'November',
  'December',
];

const getSortedMonths = (year: number) => {
  const months = Object.keys(postsByYearAndMonth[year]);
  return months.sort((a, b) => monthOrder.indexOf(b) - monthOrder.indexOf(a));
};
---

<style>
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    padding: 0;
    margin: 0;
  }

  ol {
    list-style-type: none;
    padding: 0;
  }

  .main-li-heading > button {
    font-size: 1.75rem;
    font-weight: 700;
  }

  h4 {
    font-size: 1.25rem;
  }

  ol.main-list {
    position: relative;

    display: flex;
    gap: 1rem;

    margin-top: 2.5rem;

    width: 100%;
  }

  li.main-list-item {
    isolation: isolate;

    position: relative;

    display: flex;
    flex-direction: column;
    gap: 1rem;

    margin-bottom: 1rem;

    width: 100%;
  }

  li.main-list-item::before {
    content: '';
    position: absolute;

    left: 0;
    bottom: 0;

    height: 100%;
    height: calc(100% - 4rem);
    width: 0.2rem;

    border-radius: var(--radius-pill);

    background-color: var(--clr-surface-0);

    z-index: -1;
  }

  button.main-li-title {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.25ch;

    width: fit-content;

    padding: 0;
    margin: 0;
    margin-left: -0.9rem;

    background-color: transparent;

    border: none;

    cursor: pointer;

    transition-property: color;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  button.main-li-title:hover {
    color: var(--clr-primary);
  }

  .main-li-title-icon {
    font-size: 2rem;
  }

  .sub-list {
    display: flex;
    gap: 1.5rem;

    padding-left: 1.5rem;

    margin-bottom: 2rem;

    width: 100%;
  }

  .sub-list:last-child {
    margin-bottom: 0;
  }

  .sub-list > li {
    position: relative;
    width: 100%;
  }

  .sub-list > li::before {
    content: '';

    position: absolute;
    left: -1.7rem;
    top: 50%;

    transform: translateY(-50%);

    height: 0.6rem;
    width: 0.6rem;

    border-radius: var(--radius-circle);

    background-color: var(--clr-text);

    z-index: 1;
  }

  .sub-li-title {
    position: relative;
  }

  .sub-li-title-dot {
    isolation: isolate;
    content: '';

    position: absolute;
    left: -1.9rem;
    top: 0.2rem;

    width: 1rem;
    height: 1rem;

    border-radius: var(--radius-circle);

    background-color: var(--clr-primary);
  }

  .sub-li-title-dot::after {
    content: '';

    position: absolute;
    left: 50%;
    top: 50%;

    transform: translateX(-50%) translateY(-50%);

    width: 0.4rem;
    height: 0.4rem;

    background-color: var(--clr-base);

    border-radius: var(--radius-circle);

    z-index: 1;
  }
</style>

<ol class='main-list'>
  <h1 style='color: red; font-size: 5rem;'>
    NOTE: MOVE THE DATES ABOVE THE POST TO MAKE IT LOOK NICER!
  </h1>
  {
    sortedYears.map((year) => (
      <li class='main-list-item'>
        <h3 class='main-li-heading'>
          <button class='main-li-title'>
            <span class='main-li-title-icon ri-arrow-down-s-fill' />
            <span>{year}</span>
          </button>
        </h3>
        {getSortedMonths(year).map((month) => (
          <ol class='sub-list'>
            <h4 class='sub-li-title'>
              <span class='sub-li-title-dot' />
              <span>{month}</span>
            </h4>
            {postsByYearAndMonth[year][month].map((post) => (
              <li>
                <ArchivePostCard post={post} />
              </li>
            ))}
          </ol>
        ))}
      </li>
    ))
  }
</ol>
