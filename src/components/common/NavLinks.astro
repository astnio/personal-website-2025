---
import links from '@content/links.json';
const navLinks = links.internalLinks;
---

<style>
  a {
  position: relative;

  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.2rem;

  text-decoration: none;
  text-transform: capitalize;

  padding-block: 0.4rem;

  transition-property: color, opacity;
  transition-duration: 0.1s;
  transition-timing-function: ease-out;
}

a:hover {
  color: var(--clr-primary);
}

a::after {
  content: '';

  position: absolute;
  bottom: 0.1rem;
  left: 0;

  width: 0;
  height: 1px;

  background-color: var(--clr-primary);

  transition-property: width;
  transition-duration: 0.2s;
  transition-timing-function: ease-in-out;
}

a:hover::after {
  width: 100%;
}

a[data-is-current-page='true'] {
  color: var(--clr-subtext-0);

  opacity: 0.8;
}

a[data-is-current-page='true']:hover {
  color: var(--clr-secondary);
  opacity: 1;
}

a[data-is-current-page='true']:hover::after {
  background-color: var(--clr-secondary);
  width: 100%;
}

a::before {
  content: '\203A';

  position: absolute;
  left: 0.35rem;
  top: -0.05rem;

  transform: translateX(0);
  opacity: 0;

  font-size: 1.6rem;

  transition-property: transform, opacity;
  transition-duration: 0.15s;
  transition-timing-function: ease-out;
}

a[data-is-current-page='true']::before {
  transform: translateX(-0.75rem);
  opacity: 1;
}

ul.nav-links {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 1.4rem;

  width: 100%;

  margin: 0;
  padding: 0;

  list-style: none;
}

.nav-link-icon {
  display: none;
}

@media screen and (min-width: 768px) {
  ul.nav-links li:first-child {
    display: none;
  }
}

@media screen and (max-width: 768px) {
  ul.nav-links {
    flex-direction: column;
    align-items: start;
    gap: 1rem;

    height: 100%;

    font-size: 1rem;
  }

  li {
    width: 100%;
  }

  a {
    display: flex;
    align-items: center;
    justify-content: start;

    width: 100%;

    background-color: var(--clr-base);
    outline: 1px solid var(--clr-surface-0);

    /* padding-inline: 1rem; */
    /* padding-block: 0.8rem; */

    padding: 0;
    min-height: 2.6rem;

    border-radius: var(--radius-input);

    text-align: left;

    transition-property: background-color, outline;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a:hover {
    background-color: var(--clr-surface-0);
    outline: 1px solid var(--clr-surface-1);
  }

  a::after {
    display: none;
  }

  a[data-is-current-page='true'] {
    background-color: var(--clr-crust);
    outline: 1px solid var(--clr-base);
  }

  a::before {
    content: '\2039';

    position: absolute;
    left: auto;
    right: -2.4rem;
    top: -0.58rem;

    font-size: 2.8rem;
  }

  a[data-is-current-page='true']::before {
    transform: translateX(-1.4rem);
  }

  .nav-link {
    display: flex;
    height: 100%;
  }

  .nav-link-icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;

    aspect-ratio: 1;

    background-color: var(--clr-mantle);

    margin-right: 0.8rem;

    height: 100%;

    transition-property: color, background-color;
    transition-duration: 0.15s;
    transition-timing-function: ease-out;
  }

  a:hover > .nav-link-icon-wrapper {
    background-color: var(--clr-base);
  }

  .nav-link-icon {
    display: inline-block;
    font-size: 1.2rem;
  }
}

</style>

<ul class='nav-links'>
  {
    navLinks.map((navLink) => {
      const isActive =
        Astro.url.pathname === navLink.url ||
        (navLink.url !== '/' && Astro.url.pathname.startsWith(navLink.url));

      return (
        <li>
          <a
            class='nav-link'
            href={navLink.url}
            data-is-current-page={isActive.toString()}>
            <div class="nav-link-icon-wrapper">
              <span class=`nav-link-icon ${navLink.iconClass}` />
            </div>
            <span class="nav-link-label">
              {navLink.label}
            </span>
          </a>
        </li>
      );
    })
  }
</ul>
