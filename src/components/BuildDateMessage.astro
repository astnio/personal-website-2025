---
function formatDateTime(date: Date): string {
  const months: string[] = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December',
  ];

  const month: string = months[date.getMonth()];
  const day: number = date.getDate();
  const year: number = date.getFullYear();
  const hours: number = date.getHours();
  const minutes: string = String(date.getMinutes()).padStart(2, '0');
  const period: string = hours >= 12 ? 'pm' : 'am';
  const hour12: number = hours % 12 || 12;

  const ordinal = (day: number): string => {
    if (day > 3 && day < 21) return 'th';
    switch (day % 10) {
      case 1:
        return 'st';
      case 2:
        return 'nd';
      case 3:
        return 'rd';
      default:
        return 'th';
    }
  };

  return `${month} ${day}${ordinal(day)}, ${year} at ${hour12}:${minutes}${period}`;
}

const lastBuildDate = formatDateTime(new Date());
---

<style>
  .build-date-paragraph {
    position: relative;

    display: flex;
    align-items: center;
    gap: 0.3rem;
    font-size: 0.9rem;

    width: fit-content;

    padding-inline: 0.6rem;
    padding-block: 0.4rem;
  }

  .build-date-paragraph::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    border-radius: var(--radius-input);
    outline: 1px solid var(--clr-subtext-0);

    opacity: 0.1;
  }

  .build-date-icon {
    position: relative;
    top: 1px;

    color: var(--clr-subtext-0);
  }

  .build-date {
    color: var(--clr-subtext-0);
  }

  .build-date-icon,
  .build-date {
    opacity: 0.9;
  }
</style>

<p class='build-date-paragraph'>
  <span class='visually-hidden'>Date website last built:</span>
  <span class='build-date-icon bx bx-time-five'></span>
  <span class='build-date'>{lastBuildDate}</span>
</p>
