---
import PostDirectorySideNav from '@components/pages/blog/DirectorySideNav.astro';
import Heading from '@components/typography/Heading.astro';
import BaseLayout from './BaseLayout.astro';
import PostPaginator from '@components/pages/blog/PostPaginator.astro';
import LayoutImage from '@/components/pages/blog/LayoutImage.astro';
import PostCard from '@/components/pages/blog/PostCard.astro';

type Props = {
  page: any;
  directoryTitle: string;
  directoryType?: 'topic' | 'category' | 'tag';
  enableImage?: boolean;
};

const {
  page,
  directoryTitle,
  directoryType,
  enableImage = false,
} = Astro.props;

const title =
  directoryTitle === 'Blog'
    ? 'Austin Hagel | Blog'
    : `Blog | ${directoryTitle}`;

const featuredPost = page.data.find((post: any) => post.data.featured);

const sortedPosts = page.data.filter((post: any) => post !== featuredPost);

const paginatorDisabled =
  page.url.next === undefined && page.url.prev === undefined;
---

<style>
  .directory-title-wrapper {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: center;

    width: 100%;
    padding-inline: 1rem;

    margin-bottom: 4rem;
  }

  h1.directory-title {
    font-size: 4rem;
  }

  /* *** General *** */
  a {
    text-decoration: none;
  }

  ul.blog-post-cards-list {
    display: flex;
    flex-direction: column;
    gap: 2rem;

    padding: 0;
    margin-block: 0;

    list-style: none;
  }

  li {
    display: flex;

    padding: 0;
  }

  .content-wrapper {
    display: flex;
    flex-direction: column;

    padding-inline: 1rem;

    width: 100%;
  }

  .featured-post-wrapper {
    grid-column: span 2;
    margin-bottom: 2.5rem;
    /* padding-inline: 1rem; */
  }

  .heading-directory-type {
    position: relative;
    bottom: 1.2rem;

    display: flex;
    align-items: center;
    gap: 0.4ch;

    font-size: 1.2rem;
    font-weight: 300;
    letter-spacing: 0.1ch;
    color: var(--clr-subtext-0);

    background-color: var(--clr-base);
    padding-inline: 1rem;
    padding-block: 0.4rem;

    margin: 0;
    margin-top: 1.5rem;

    border-radius: var(--radius-surface);
  }

  .heading-directory-type-icon {
    position: relative;
    /* top: 1px; */
  }

  .heading-directory-type-label {
    text-transform: capitalize;
  }

  .nav-spacer {
    content: '';
    display: flex;
    width: 100%;
    height: 4rem;
    visibility: hidden;
  }

  @media screen and (min-width: 768px) {
    .content-wrapper {
      display: grid;
      grid-template-columns: 1fr auto;
    }
    /* *** Blog Post Cards *** */

    .blog-post-cards-list {
      margin-right: 1rem;
    }
  }
</style>

<BaseLayout title={title}>
  {
    enableImage && (
      <LayoutImage
        directoryTitle={directoryTitle}
        transition:name='post-directory-image'
      />
    )
  }
  {
    !enableImage && directoryTitle !== 'Blog' && (
      <div class='directory-title-wrapper max-width'>
        <Heading
          type='title'
          level={1}
          size='l6x'>
          {directoryTitle}
        </Heading>
        {directoryType && (
          <p class='heading-directory-type'>
            {directoryType === 'topic' && (
              <span class='heading-directory-type-icon bx bxs-bulb' />
            )}
            {directoryType === 'category' && (
              <span class='heading-directory-type-icon bx bxs-category' />
            )}
            {directoryType === 'tag' && (
              <span class='heading-directory-type-icon bx bxs-tag-alt' />
            )}
            <span class='heading-directory-type-label'>{directoryType}</span>
          </p>
        )}
      </div>
    )
  }

  <div class='content-wrapper max-width'>
    <!-- <PostDirectoryTopicNav
      posts={posts}
      urlPath={`/blog/topics/`}
    /> -->
    {
      featuredPost && (
        <section class='featured-post-wrapper'>
          <PostCard
            featured={true}
            post={featuredPost}
            transition:name={`post-card-featured-${featuredPost.id}`}
          />
        </section>
      )
    }
    <section class='blog-post-cards-wrapper'>
      <ul
        class='blog-post-cards-list'
        transition:name='blog-post-cards-list'>
        {
          sortedPosts.map((post: any) => (
            <li>
              <PostCard
                post={post}
                transition:name={`post-card-${post.id}`}
              />
            </li>
          ))
        }
      </ul>
      {paginatorDisabled && <div class='nav-spacer' />}
      <PostPaginator page={page} />
    </section>
    <div class='side-nav-wrapper'>
      <PostDirectorySideNav />
    </div>
  </div>
</BaseLayout>
