---
import { getCollection } from 'astro:content';
import BlogPostCard from '@components/BlogPostCard.astro';
import BlogPageImage from '@components/BlogPageImage.astro';
import '@styles/pages/blog.css';
import Tag from '@components/interface/Tag.astro';
import Chip from '@components/interface/Chip.astro';
import { calculateReadingTime } from '@scripts/utils/readingTime';
import PostDirectoryTopicNav from '@components/PostDirectoryTopicNav.astro';

const allPosts = await getCollection('blog');

const sortedPosts = allPosts
  .sort(
    (a, b) => b.data.date_published.valueOf() - a.data.date_published.valueOf()
  )
  .map((post) => ({
    ...post,
    readingTime: calculateReadingTime(post.body),
  }));

const tags = [
  ...new Set(sortedPosts.map((post: any) => post.data.tags).flat()),
];
const categories = [
  ...new Set(sortedPosts.map((post: any) => post.data.category).flat()),
];

const { posts, imageLabel } = Astro.props;
---

<BlogPageImage
  imageLabel={imageLabel}
  transition:name='post-directory-image'
/>
<div class='wrapper max-width'>
  <PostDirectoryTopicNav />
  <section class='blog-post-cards-wrapper'>
    <ul class='blog-post-cards-list'>
      {
        posts.map((post: any) => (
          <li>
            <BlogPostCard
              post={post}
              transition:name={`post-card-${post.id}`}
            />
          </li>
        ))
      }
    </ul>
  </section>
  <aside
    class='blog-nav-wrapper'
    transition:name='post-direcotry-nav'>
    <nav class='blog-nav'>
      <ul class='blog-nav-list'>
        <li class='blog-nav-sublist-wrapper'>
          <a
            href='/blog/categories'
            class='blog-nav-list-title'>
            <span class='bx bxs-category'></span>
            <span>Categories</span>
          </a>
          <ul class='blog-nav-sublist category-list'>
            {
              categories.map((category) => (
                <li>
                  <Chip url={`/blog/categories/${category}`}>{category}</Chip>
                </li>
              ))
            }
          </ul>
        </li>
        <li class='blog-nav-sublist-wrapper'>
          <a
            href='/blog/tags'
            class='blog-nav-list-title'>
            <span class='bx bxs-tag'></span>
            <span>Tags</span>
          </a>
          <ul class='blog-nav-sublist tags-list'>
            {
              tags.map((tag) => (
                <li>
                  <Tag url={`/blog/tags/${tag}`}>{tag}</Tag>
                </li>
              ))
            }
          </ul>
        </li>
        <li>
          <a href='/blog/archive'>Archive</a>
        </li>
      </ul>
    </nav>
  </aside>
</div>
