---
import { getCollection } from 'astro:content';
import PostDirectory from '@layouts/PostDirectory.astro';
import type { PaginateFunction } from 'astro';

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const allPosts = await getCollection('blog');
  const publishedPosts = allPosts.filter(
    (post) => post.data.published !== false
  );

  const uniqueTopics = [
    ...new Set(publishedPosts.map((post) => post.data.topic).flat()),
  ];

  return uniqueTopics.flatMap((topic) => {
    const topicPosts = publishedPosts.filter(
      (post) => post.data.topic.toLowerCase() === topic.toLowerCase()
    );

    const sortedPosts = topicPosts.sort(
      (a, b) =>
        new Date(b.data.date_published).getTime() -
        new Date(a.data.date_published).getTime()
    );

    return paginate(sortedPosts, {
      params: { topic },
      pageSize: 4,
      props: { topic },
    });
  });
}

const { topic } = Astro.params;
const { page } = Astro.props;
---

<PostDirectory
  page={page}
  directoryTitle={topic}
  directoryType='topic'
/>
