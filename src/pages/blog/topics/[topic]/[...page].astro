---
import { getCollection } from 'astro:content';
import PostDirectoryPaginated from '@layouts/PostDirectoryPaginated.astro';

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection('blog');

  // Get unique topics using Set
  const uniqueTopics = [
    ...new Set(allPosts.map((post) => post.data.topic).flat()),
  ];

  // Create paginated paths for each topic
  return uniqueTopics.flatMap((topic) => {
    // Filter posts that include this topic
    const topicPosts = allPosts.filter((post) =>
      post.data.topic.includes(topic)
    );

    // Sort posts by date (newest first)
    const sortedPosts = topicPosts.sort(
      (a, b) =>
        new Date(b.data.date_published).getTime() -
        new Date(a.data.date_published).getTime()
    );

    // Return paginated paths for this topic
    return paginate(sortedPosts, {
      params: { topic },
      pageSize: 4,
      props: { topic },
    });
  });
}

const { topic } = Astro.params;
const { page } = Astro.props;
---

<PostDirectoryPaginated
  page={page}
  directoryTitle={topic}
/>
