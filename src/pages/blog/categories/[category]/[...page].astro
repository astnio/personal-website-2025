---
import { getCollection } from 'astro:content';
import PostDirectoryPaginated from '@layouts/PostDirectoryPaginated.astro';
import type { PaginateFunction } from 'astro';

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const allPosts = await getCollection('blog');

  const uniqueCategories = [
    ...new Set(allPosts.map((post) => post.data.category).flat()),
  ];

  return uniqueCategories.flatMap((category) => {
    const categoryPosts = allPosts.filter((post) =>
      post.data.category.includes(category)
    );

    const sortedPosts = categoryPosts.sort(
      (a, b) =>
        new Date(b.data.date_published).getTime() -
        new Date(a.data.date_published).getTime()
    );

    return paginate(sortedPosts, {
      params: { category },
      pageSize: 4,
      props: { category },
    });
  });
}

const { category } = Astro.params;
const { page } = Astro.props;
---

<PostDirectoryPaginated
  page={page}
  directoryTitle={category}
  directoryType='category'
/>
