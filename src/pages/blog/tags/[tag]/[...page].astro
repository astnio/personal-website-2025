---
import { getCollection } from 'astro:content';
import PostDirectoryPaginated from '@layouts/PostDirectoryPaginated.astro';
import type { PaginateFunction } from 'astro';

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const allPosts = await getCollection('blog');

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.flatMap((tag) => {
    const tagPosts = allPosts.filter((post) => post.data.tags.includes(tag));

    const sortedPosts = tagPosts.sort(
      (a, b) =>
        new Date(b.data.date_published).getTime() -
        new Date(a.data.date_published).getTime()
    );

    return paginate(sortedPosts, {
      params: { tag },
      pageSize: 4,
      props: { tag },
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
---

<PostDirectoryPaginated
  page={page}
  directoryTitle={tag}
  directoryType='tag'
/>
